let { invalidRes } = require("../config");

const responseDataForError = (theError) =>{
    console.warn("OOPS!!: \n", theError);
    /** 
     * @description => checking if error is genearted by dependency module 
     * or routes or function code by team 
     * @if error generated by module that code by team 
     *  @then error is in form of string
     * @else 
     *  @then stack of error will thrown in that case OOPS!!! word will send
     */ 
    return typeof(theError) == "string" ? theError : "OOPS!!!";
}

/**
 * @description => load error page
 * 
 * @param {*} error 
 * @param {*} res 
 */
const loadErrorPage = (error, res)=>{
    //error handling
    res.locals.data = responseDataForError(error);
    return res.status(500).render("error", res.locals.data);
}

/**
 * @description => error response sending
 * 
 * @param {*} error 
 * @param {*} res 
 */
const errorJSONResponse = (error, res)=>{
    invalidRes.data = responseDataForError(error);
    return res.status(500).json(invalidRes);
}

module.exports = { responseDataForError, loadErrorPage, errorJSONResponse }